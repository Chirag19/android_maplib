/*
 * Project: NextGIS Mobile SDK
 * Author:  Dmitry Baryshnikov, dmitry.baryshnikov@nextgis.com
 *
 * Created by Dmitry Baryshnikov on 14.08.18 20:59.
 * Copyright (c) 2018-2019 NextGIS, info@nextgis.com.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser Public License for more details.
 *
 * You should have received a copy of the GNU Lesser Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'kotlin-kapt'

def androidAbis = ["armeabi-v7a", "arm64-v8a", "x86_64", "x86"] //
def gdalFiles = [ "cubewerx_extra.wkt", "ecw_cs.wkt", "ellipsoid.csv", "epsg.wkt",
                  "esri_StatePlane_extra.wkt", "gdalvrt.xsd", "gml_registry.xml",
                  "gmlasconf.xml", "gmlasconf.xsd", "gt_datum.csv",
                  "gt_ellips.csv", "ogrvrt.xsd", "stateplane.csv" ]
def sslFiles = ["cert.pem"]
def projFiles = ["proj.db"]
def buildConfig = android.defaultPublishConfig.toString()
def buildConfigUpper = buildConfig.substring(0, 1).toUpperCase() +
        buildConfig.substring(1, buildConfig.length())

ext {
    bintrayRepo = 'MapLib'
    bintrayName = 'com.nextgis.maplib'

    publishedGroupId = 'com.nextgis.maplib'
    libraryName = 'maplib'
    artifact = 'maplib'

    libraryDescription = 'The base map library for Android geo applications.'

    siteUrl = 'https://github.com/nextgis/android_maplib'
    gitUrl = 'https://github.com/nextgis/android_maplib.git'

    libraryVersion = '3.4.0'

    developerId = 'bishopgis'
    developerName = 'Dmitry Baryshnikov'
    developerEmail = 'dmitry.baryshnikov@nextgis.com'

    licenseName = 'GNU LESSER GENERAL PUBLIC LICENSE, Version 3.0'
    licenseUrl = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
    allLicenses = ["LGPL-3.0"]
}

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 15
        versionName '3.4.0'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters = androidAbis
        }

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti"
                arguments "-DSUPRESS_VERBOSE_OUTPUT=OFF",
                        "-DANDROID_TOOLCHAIN=clang",
                        "-DANDROID_STL=c++_static",
                        "-DANDROID_CPP_FEATURES=rtti", //exceptions
//                        "-GAndroid Gradle - Unix Makefiles",
//                        "-DCMAKE_MAKE_PROGRAM=make",
                        "-DBUILD_SHARED_LIBS=ON",
                        "-DBUILD_STATIC_LIBS=OFF",
                        "-DBUILD_TARGET_PLATFORM=ANDROID"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "${projectDir}/src/main/ngstore/CMakeLists.txt"
        }
    }
    productFlavors {
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    dokka { // Needed for bintray
        outputFormat = 'javadoc'
        outputDirectory = "$buildDir/docs/javadoc"
//        sourceDirs = files('src/main/kotlin')
    }
    dataBinding {
        enabled = true
    }
    buildToolsVersion '28.0.3'
}

task copyFiles() {
    description "Copy assets to ${projectDir}/src/main/assets"
    dependsOn tasks.findAll { task -> task.name.contains("externalNativeBuild${buildConfigUpper}") }

    gdalFiles.each { name ->
        copy {
            into "$projectDir/src/main/assets/gdal"
            from "$projectDir/.externalNativeBuild/cmake/$buildConfig/x86_64/data/$name"
        }
    }

    projFiles.each { name ->
        copy {
            into "$projectDir/src/main/assets/proj"
            from "$projectDir/.externalNativeBuild/cmake/$buildConfig/x86_64/data/$name"
        }
    }

    sslFiles.each { name ->
        copy {
            into "$projectDir/src/main/assets/certs"
            from "$projectDir/.externalNativeBuild/cmake/$buildConfig/x86_64/data/$name"
        }
    }
}

// temporary disable cmake build
//tasks.matching { it.name.contains('externalNativeBuild') }.all {
//    it.enabled = false
//}

tasks.matching { it.name == 'externalNativeBuild' }.all {
    it.dependsOn(copyFiles)
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.13-beta-3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'io.sentry:sentry-android:1.7.22'
    implementation 'org.slf4j:slf4j-nop:1.8.0-beta4'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
}

// add it to the bottom of the file

apply from: 'installv1.gradle'
apply from: 'bintrayv1.gradle'
